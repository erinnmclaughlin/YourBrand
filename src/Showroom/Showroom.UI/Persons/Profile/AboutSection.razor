@inject IPersonProfilesClient PersonProfilesClient
@inject ISnackbar Snackbar

<EditForm Model="@this" OnValidSubmit="Submit">
    <MudCard Class="mb-4" Elevation="25">
        <MudCardContent>
            <div class="d-flex justify-space-between align-center mb-4">
                <MudText Typo="Typo.h5">
                    About @(PersonProfile.DisplayName ?? PersonProfile.FirstName)
                </MudText>

                @if (!IsEditing)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" OnClick="ToggleEditing" />
                }
            </div>

            @if (IsEditing)
            {
                <MudTextField Label="Presentation" Lines="10" Class="mt-3" @bind-Value="Presentation"
                For="@(() => Presentation)" />
            }
            else
            {
                @((MarkupString)PersonProfile.Presentation.Replace("\n", "<br />"))
            }

        </MudCardContent>

        @if (IsEditing)
        {
            <MudCardActions>
                <MudButton Variant="Variant.Text" StartIcon="@Icons.Material.Filled.Cancel" Class="me-2"
                OnClick="ToggleEditing">Cancel</MudButton>

                <MudButton Variant="Variant.Text" Color="Color.Primary" ButtonType="ButtonType.Submit"
                StartIcon="@Icons.Material.Filled.Save">Save</MudButton>
            </MudCardActions>
        }
    </MudCard>
</EditForm>


@code {
    [Parameter]
    public PersonProfile PersonProfile { get; set; } = null!;

    public bool IsEditing { get; set; } = false;

    public string? Presentation { get; set; }

    private void ToggleEditing()
    {
        if (IsEditing)
        {
            IsEditing = false;

            Presentation = null;
        }
        else
        {
            IsEditing = true;

            Presentation = PersonProfile.Presentation;
        }
    }

    private async Task Submit()
    {
        try 
        {
            await PersonProfilesClient.UpdatePresentationAsync(PersonProfile.Id, Presentation);

            PersonProfile.Presentation = Presentation;

            IsEditing = false;

            Snackbar.Add("Presentation updated.", Severity.Success);
        }
        catch(Exception exc) 
        {
            Snackbar.Add("Failed to update presentation.", Severity.Error);
        }
    }
}
